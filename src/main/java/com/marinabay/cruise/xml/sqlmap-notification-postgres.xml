<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.marinabay.cruise.dao.NotificationDao" >

  <resultMap id="mapResult" type="com.marinabay.cruise.model.Notification" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="sender_id" property="senderId" jdbcType="VARCHAR" />
    <result column="sender_name" property="senderName" jdbcType="VARCHAR" />
    <result column="user_cnt" property="userCnt" jdbcType="INTEGER" />
    <result column="reg_date" property="regDate" jdbcType="TIMESTAMP" />
  </resultMap>

    <resultMap id="userMapResult" type="com.marinabay.cruise.model.UserNotification" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="user_id" property="userId" jdbcType="BIGINT" />
        <result column="notification_id" property="notificationId" jdbcType="BIGINT" />
        <result column="status" property="status" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="VARCHAR" />
        <result column="send_id" property="sendId" jdbcType="VARCHAR" />
        <result column="reg_date" property="regDate" jdbcType="TIMESTAMP" />
    </resultMap>

  <sql id="Base_Column_List" >
    id, message, user_cnt, reg_date, sender_id, sender_name
  </sql>

 <select id="count" resultType="long" parameterType="pagingModel" >
    select count(id) as total
    from notification
     where 1=1

 </select>

  <select id="select" resultMap="mapResult" parameterType="pagingModel" >
    select
    <include refid="Base_Column_List" />

    from notification ug
      where 1=1
      order by reg_date
      <if test="limit > 0" >
          limit ${limit} offset ${offset}
      </if>
  </select>
  
  <select id="selectByID" resultMap="mapResult" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from notification
    where id = #{value}
  </select>



  <delete id="deleteByID" parameterType="java.lang.Long" >
    delete from notification
    where id = #{value}
  </delete>

  <insert id="insert" parameterType="notificationModel" >
    insert into notification (message, user_cnt, sender_id, sender_name, reg_date)
    values (
    	#{message,jdbcType=VARCHAR},
    	#{userCnt,jdbcType=VARCHAR},
    	#{senderId,jdbcType=BIGINT},
    	#{senderName,jdbcType=VARCHAR},
    	now()
      )
      
    <selectKey resultType="java.lang.Long" keyProperty="id" >
         SELECT last_value as id FROM notification_id_seq;
     </selectKey>

  </insert>

    <update id="update" parameterType="notificationModel" >
    update notification
    set
      user_cnt = #{userCnt,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <insert id="insertUserNotification" parameterType="userNotification" >
        insert into user_notification (user_id, notification_id, type, status, reg_date)
        values (
        #{userId,jdbcType=BIGINT},
        #{notificationId,jdbcType=BIGINT},
        #{type,jdbcType=VARCHAR},
        #{status,jdbcType=VARCHAR},
        now()
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" >
            SELECT last_value as id FROM user_notification_id_seq;
        </selectKey>

    </insert>

  <update id="updateUserNotification" parameterType="userNotification" >
    update user_notification
    set
      status = #{status,jdbcType=VARCHAR},
      send_id = #{sendId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="getAllSendMsg" resultMap="userMapResult">
        select id, user_id , notification_id, type, status, send_id, reg_date
        from user_notification
        where status = 'SENT' and send_id is not null
    </select>

  

</mapper>
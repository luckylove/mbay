<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.marinabay.cruise.dao.UserDao" >


  <resultMap id="userResultMap" type="com.marinabay.cruise.model.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="nric_no" property="nricNo" jdbcType="VARCHAR" />
    <result column="ui_num" property="uiNum" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="VARCHAR" />
    <result column="taxi_license" property="taxiLicense" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="user_type" property="userType" jdbcType="VARCHAR" />
    <result column="taxi_id" property="taxiId" jdbcType="BIGINT" />
    <result column="taxi_company" property="taxiCompany" jdbcType="VARCHAR" />
    <result column="device_type" property="deviceType" jdbcType="VARCHAR" />
    <result column="device_token" property="deviceToken" jdbcType="VARCHAR" />
    <result column="send_push" property="sendPush" jdbcType="VARCHAR" />
    <result column="reg_date" property="regDate" jdbcType="TIMESTAMP" />
    <result column="mod_date" property="modDate" jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, user_name, nric_no, ui_num, name, taxi_id, email, mobile, password, role, taxi_license, address, user_type, reg_date, mod_date, send_push ,device_type , device_token
  </sql>

    <sql id="Base_Column_List_Aias" >
    us.id, user_name, nric_no, ui_num, us.name, taxi_id, email, mobile, password, role, taxi_license, address, user_type, us.reg_date, us.mod_date, us.send_push
  </sql>

    <select id="count" resultType="long" parameterType="pagingModel" >
        select count(id) as total
        from users  us
        where 1=1
        <choose>
            <when test="filterId != null and filterId >= 0">
                <choose>
                    <when test="filterId == 0">
                        and us.id not in (select ugs.user_id from user_group_user ugs where ugs.user_id=us.id)
                    </when>
                    <otherwise>
                        and us.id in (select ugs.user_id from user_group_user ugs where ugs.group_id = #{filterId} and ugs.user_id=us.id)
                    </otherwise>
                </choose>
                <if test="notInIds != null and notInIds != ''">
                    and us.id not in
                    <foreach collection="notInIdsArr" item="it" separator="," close=")" open="(">
                        #{it}
                    </foreach>
                </if>
            </when>
            <otherwise>
                <if test="search != null and search != ''" >
                    and (user_name like '%' || #{search} || '%' or address like '%' || #{search} || '%' or mobile like '%' || #{search} || '%'
                    or taxi_license like '%' || #{search} || '%' or email like '%' || #{search} || '%')
                </if>

                <if test="notInIds != null and notInIds != ''">
                    and us.id not in
                    <foreach collection="notInIdsArr" item="it" separator="," close=")" open="(">
                        #{it}
                    </foreach>
                </if>
            </otherwise>
        </choose>
        <if test="userType != null and userType == 'PUSH'">
            AND us.user_type = 'MOBILE'
        </if>
        <if test="userType != null and userType == 'SMS'">
            AND us.user_type = 'WEB'
        </if>
    </select>
  <select id="select" resultMap="userResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List_Aias" /> , x.name as taxiCompany
    from users us  left outer join taxi x on us.taxi_id = x.id
      where 1=1
      <choose>
          <when test="filterId != null and filterId >= 0">
              <choose>
                  <when test="filterId == 0">
                      and us.id not in (select ugs.user_id from user_group_user ugs where ugs.user_id=us.id)
                  </when>
                  <otherwise>
                      and us.id in (select ugs.user_id from user_group_user ugs where ugs.group_id = #{filterId} and ugs.user_id=us.id)
                  </otherwise>
              </choose>
              <if test="notInIds != null and notInIds != ''">
                  and us.id not in
                  <foreach collection="notInIdsArr" item="it" separator="," close=")" open="(">
                      #{it}
                  </foreach>
              </if>
          </when>
          <otherwise>
              <if test="search != null and search != ''" >
                  and (user_name like '%' || #{search} || '%' or address like '%' || #{search} || '%' or mobile like '%' || #{search} || '%'
                  or taxi_license like '%' || #{search} || '%' or email like '%' || #{search} || '%')
              </if>
              <if test="notInIds != null and notInIds != ''">
                  and us.id not in
                  <foreach collection="notInIdsArr" item="it" separator="," close=")" open="(">
                      #{it}
                  </foreach>
              </if>
          </otherwise>
      </choose>
      <if test="userType != null and userType == 'PUSH'">
          AND us.user_type = 'MOBILE'
      </if>
      <if test="userType != null and userType == 'SMS'">
          AND us.user_type = 'WEB'
      </if>

      <if test="name != null and name != ''" >
          order by ${name} ${order}
      </if>
      <if test="limit > 0" >
          limit ${limit} offset ${offset}
      </if>

  </select>

    <select id="selectByLicense" resultMap="userResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List_Aias" />
        from users us
        where 1=1   and lower(taxi_license) like '%' || lower(#{value}) || '%'
        limit 10 offset 0
    </select>
  
  <select id="selectByID" resultMap="userResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List_Aias" /> , x.name as taxi_company
    from users us
      left outer join taxi x on us.taxi_id= x.id
    where us.id = #{value}
  </select>

  <select id="findUserByEmail" resultMap="userResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from users
        where email = #{value}
  </select>

 <select id="findByUserName" resultMap="userResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from users
        where user_name = #{value}
  </select>
  
  <delete id="deleteByID" parameterType="java.lang.Long" >
    delete from users
    where id = #{value}
  </delete>

 <insert id="insert" parameterType="userModel" >
     <selectKey keyProperty="id"
                resultType="java.lang.Long" order="BEFORE">
         SELECT nextVal('user_id_seq')
     </selectKey>
    insert into users (id, user_name, email, name, nric_no, ui_num, mobile, password, role, taxi_license, user_type, taxi_id, reg_date)
    values (
    	#{id,jdbcType=BIGINT},
    	#{userName,jdbcType=VARCHAR},
    	#{email,jdbcType=VARCHAR},
    	#{name,jdbcType=VARCHAR},
    	#{nricNo,jdbcType=VARCHAR},
    	#{uiNum,jdbcType=VARCHAR},
    	#{mobile,jdbcType=VARCHAR},
    	#{password,jdbcType=VARCHAR},
    	#{role,jdbcType=VARCHAR},
    	#{taxiLicense,jdbcType=VARCHAR},
    	#{userType,jdbcType=VARCHAR},
    	#{taxiId,jdbcType=BIGINT},
    	now()
      )
  </insert>
  
  
  
  <update id="update" parameterType="userModel" >
    update users
    set
      user_name = #{userName,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      nric_no = #{nricNo,jdbcType=VARCHAR},
      ui_num = #{uiNum,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR},
      taxi_license = #{taxiLicense,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=VARCHAR},
      taxi_id = #{taxiId,jdbcType=BIGINT},
      mod_date = now()
    where id = #{id,jdbcType=BIGINT}
  </update>

   <insert id="insertUserGroup" parameterType="userGroupUser" >
        insert into user_group_user (user_id, group_id, reg_date)
        values (
        #{userId,jdbcType=BIGINT},
        #{groupId,jdbcType=BIGINT},
        now()
        )
    </insert>

    <select id="hasByUserAndGroup" resultType="long" parameterType="userGroupUser" >
        select count(user_id)
        from user_group_user
        where group_id=#{groupId} AND user_id = #{userId}
    </select>

  <delete id="resetUserGroup" parameterType="java.lang.Long" >
    delete from user_group_user
    where group_id = #{value}
  </delete>
    <select id="selectAllId" resultMap="userResultMap" >
        select  id
        from users us
        where 1=1
    </select>

    <select id="selectAllByGroup" resultMap="userResultMap" parameterType="map">
        select  *
        from users us
        where 1=1
        and us.id in (select ugs.user_id from user_group_user ugs where ugs.group_id = #{groupId} and ugs.user_id=us.id)
        <if test="userType != null and userType == 'PUSH'">
            AND us.user_type = 'MOBILE'
        </if>
        <if test="userType != null and userType == 'SMS'">
            AND us.user_type = 'WEB'
        </if>
    </select>

    <select id="loadAllUserByIds" resultMap="userResultMap" parameterType="map">
    select
    <include refid="Base_Column_List" />
    from users us
    where 1=1
        and us.id in
        <foreach collection="userIds" item="it" separator="," open="("  close=")">
            #{it}
        </foreach>
    </select>

   <update id="updateToken" parameterType="map" >
    update users
    set
      device_token = #{deviceToken,jdbcType=VARCHAR},
      device_type = #{devicetype,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

   <update id="updatePassword" parameterType="map" >
    update users
    set
      password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <update id="updatePushNotification" parameterType="map" >
    update users
    set
      send_push = #{push,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

   <select id="checkDupUsername" resultMap="userResultMap" parameterType="map">
        select  *
        from users us
        where 1=1
        and us.id != #{userId} and us.user_name = #{username}
    </select>

    <select id="checkDupEmail" resultMap="userResultMap" parameterType="map">
        select  *
        from users us
        where 1=1
        and us.id != #{userId} and us.email = #{email}
    </select>
</mapper>
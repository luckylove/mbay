<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.marinabay.cruise.dao.LuckyDrawDao" >

  <resultMap id="mapResult" type="com.marinabay.cruise.model.LuckyDraw" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="trigger_time" property="triggerTime" jdbcType="TIMESTAMP" />
    <result column="user_ids" property="userIds" jdbcType="VARCHAR" />
    <result column="number_user" property="numberUser" jdbcType="INTEGER" />
  </resultMap>


  <sql id="Base_Column_List" >
    id, content, trigger_time, user_ids, number_user
  </sql>
  <sql id="Base_Column_List_Alias" >
    ug.id, ug.content, ug.trigger_time, ug.user_ids, ug.number_user
  </sql>

 <select id="count" resultType="long" parameterType="pagingModel" >
    select count(id) as total
    from luckydraw
     where 1=1
 </select>

  <select id="select" resultMap="mapResult" parameterType="pagingModel" >
    select
    <include refid="Base_Column_List_Alias" />
    from luckydraw ug
      where 1=1
      order by trigger_time desc
  <if test="limit > 0" >
      limit ${limit} offset ${offset}
  </if>

  </select>
  
  <select id="selectByID" resultMap="mapResult" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from luckydraw
    where id = #{value}
  </select>

  <delete id="deleteByID" parameterType="java.lang.Long" >
    delete from luckydraw
    where id = #{value}
  </delete>

  <insert id="insert" parameterType="luckyDraw" >

      <selectKey keyProperty="id"
                 resultType="java.lang.Long" order="BEFORE">
          SELECT nextVal('luckydraw_id_seq')
      </selectKey>

    insert into luckydraw (id, content, trigger_time, user_ids, number_user)
    values (
    	#{id,jdbcType=BIGINT},
    	#{content,jdbcType=VARCHAR},
    	#{triggerTime,jdbcType=TIMESTAMP},
    	#{userIds,jdbcType=VARCHAR},
    	#{numberUser,jdbcType=INTEGER}
      )
      
  </insert>

  <select id="randomUser" resultType="long" parameterType="list">
    select id from users
     <if test="list != null and list.size() > 0">
         where id not in
         <foreach  collection="list" open="(" close=")" separator="," item="it">#{it}</foreach>
     </if>
    offset floor(random() * (select count(*) from users)) limit 1
  </select>

  <select id="selectNotRun" resultMap="mapResult" parameterType="pagingModel">
    select
    <include refid="Base_Column_List" />
    from luckydraw ug
    where 1=1 AND user_ids is null AND trigger_time::date >= now()::date
  </select>

    <update id="updateLuckyUser" parameterType="luckyDraw" >
    update luckydraw
    set
      user_ids = #{userIds}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>